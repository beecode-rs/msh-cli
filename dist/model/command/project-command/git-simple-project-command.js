import { shellService } from '#src/service/shell-service';
import { config } from '#src/util/config';
export var GitSimpleCommand;
(function (GitSimpleCommand) {
    GitSimpleCommand["STATUS"] = "status";
    GitSimpleCommand["FETCH"] = "fetch";
    GitSimpleCommand["PULL"] = "pull";
})(GitSimpleCommand || (GitSimpleCommand = {}));
export class GitSimpleProjectCommand {
    _simpleGitCommand;
    _rootDir;
    constructor(params) {
        const { gitSimpleCommand, rootDir = config().rootDir } = params;
        this._simpleGitCommand = gitSimpleCommand;
        this._rootDir = rootDir;
    }
    async execute(project) {
        try {
            const cmd = `git -C ${this._rootDir}/${project} ${this._simpleGitCommand}`;
            const result = await shellService.exec(cmd);
            return [{ errorMessage: result.stderr, name: project, stringResult: result.stdout }];
        }
        catch (err) {
            return [{ errorMessage: err.message }];
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2l0LXNpbXBsZS1wcm9qZWN0LWNvbW1hbmQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbW9kZWwvY29tbWFuZC9wcm9qZWN0LWNvbW1hbmQvZ2l0LXNpbXBsZS1wcm9qZWN0LWNvbW1hbmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0EsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDRCQUE0QixDQUFBO0FBQ3pELE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQTtBQUV6QyxNQUFNLENBQU4sSUFBWSxnQkFJWDtBQUpELFdBQVksZ0JBQWdCO0lBQzNCLHFDQUFpQixDQUFBO0lBQ2pCLG1DQUFlLENBQUE7SUFDZixpQ0FBYSxDQUFBO0FBQ2QsQ0FBQyxFQUpXLGdCQUFnQixLQUFoQixnQkFBZ0IsUUFJM0I7QUFFRCxNQUFNLE9BQU8sdUJBQXVCO0lBQ2hCLGlCQUFpQixDQUFrQjtJQUNuQyxRQUFRLENBQVE7SUFFbkMsWUFBWSxNQUFnRTtRQUMzRSxNQUFNLEVBQUUsZ0JBQWdCLEVBQUUsT0FBTyxHQUFHLE1BQU0sRUFBRSxDQUFDLE9BQU8sRUFBRSxHQUFHLE1BQU0sQ0FBQTtRQUMvRCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsZ0JBQWdCLENBQUE7UUFDekMsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUE7SUFDeEIsQ0FBQztJQUVELEtBQUssQ0FBQyxPQUFPLENBQUMsT0FBZTtRQUM1QixJQUFJLENBQUM7WUFDSixNQUFNLEdBQUcsR0FBRyxVQUFVLElBQUksQ0FBQyxRQUFRLElBQUksT0FBTyxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFBO1lBQzFFLE1BQU0sTUFBTSxHQUFHLE1BQU0sWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQTtZQUUzQyxPQUFPLENBQUMsRUFBRSxZQUFZLEVBQUUsTUFBTSxDQUFDLE1BQU0sRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQTtRQUNyRixDQUFDO1FBQUMsT0FBTyxHQUFRLEVBQUUsQ0FBQztZQUNuQixPQUFPLENBQUMsRUFBRSxZQUFZLEVBQUUsR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFDLENBQUE7UUFDdkMsQ0FBQztJQUNGLENBQUM7Q0FDRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV4ZWN1dGVSZXN1bHQsIFByb2plY3RFeGVjdXRhYmxlIH0gZnJvbSAnI3NyYy9tb2RlbC9jb21tYW5kL2ludGVyZmFjZXMnXG5pbXBvcnQgeyBzaGVsbFNlcnZpY2UgfSBmcm9tICcjc3JjL3NlcnZpY2Uvc2hlbGwtc2VydmljZSdcbmltcG9ydCB7IGNvbmZpZyB9IGZyb20gJyNzcmMvdXRpbC9jb25maWcnXG5cbmV4cG9ydCBlbnVtIEdpdFNpbXBsZUNvbW1hbmQge1xuXHRTVEFUVVMgPSAnc3RhdHVzJyxcblx0RkVUQ0ggPSAnZmV0Y2gnLFxuXHRQVUxMID0gJ3B1bGwnLFxufVxuXG5leHBvcnQgY2xhc3MgR2l0U2ltcGxlUHJvamVjdENvbW1hbmQgaW1wbGVtZW50cyBQcm9qZWN0RXhlY3V0YWJsZSB7XG5cdHByb3RlY3RlZCByZWFkb25seSBfc2ltcGxlR2l0Q29tbWFuZDogR2l0U2ltcGxlQ29tbWFuZFxuXHRwcm90ZWN0ZWQgcmVhZG9ubHkgX3Jvb3REaXI6IHN0cmluZ1xuXG5cdGNvbnN0cnVjdG9yKHBhcmFtczogeyBnaXRTaW1wbGVDb21tYW5kOiBHaXRTaW1wbGVDb21tYW5kOyByb290RGlyPzogc3RyaW5nIH0pIHtcblx0XHRjb25zdCB7IGdpdFNpbXBsZUNvbW1hbmQsIHJvb3REaXIgPSBjb25maWcoKS5yb290RGlyIH0gPSBwYXJhbXNcblx0XHR0aGlzLl9zaW1wbGVHaXRDb21tYW5kID0gZ2l0U2ltcGxlQ29tbWFuZFxuXHRcdHRoaXMuX3Jvb3REaXIgPSByb290RGlyXG5cdH1cblxuXHRhc3luYyBleGVjdXRlKHByb2plY3Q6IHN0cmluZyk6IFByb21pc2U8RXhlY3V0ZVJlc3VsdFtdPiB7XG5cdFx0dHJ5IHtcblx0XHRcdGNvbnN0IGNtZCA9IGBnaXQgLUMgJHt0aGlzLl9yb290RGlyfS8ke3Byb2plY3R9ICR7dGhpcy5fc2ltcGxlR2l0Q29tbWFuZH1gXG5cdFx0XHRjb25zdCByZXN1bHQgPSBhd2FpdCBzaGVsbFNlcnZpY2UuZXhlYyhjbWQpXG5cblx0XHRcdHJldHVybiBbeyBlcnJvck1lc3NhZ2U6IHJlc3VsdC5zdGRlcnIsIG5hbWU6IHByb2plY3QsIHN0cmluZ1Jlc3VsdDogcmVzdWx0LnN0ZG91dCB9XVxuXHRcdH0gY2F0Y2ggKGVycjogYW55KSB7XG5cdFx0XHRyZXR1cm4gW3sgZXJyb3JNZXNzYWdlOiBlcnIubWVzc2FnZSB9XVxuXHRcdH1cblx0fVxufVxuIl19